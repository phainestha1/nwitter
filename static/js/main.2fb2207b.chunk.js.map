{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","routes/Reference.js","routes/Weather.js","routes/Todo.js","routes/Feeling.js","components/Navigation.js","components/SideBarOptions.js","components/SideBar.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_ID","appId","firebase","initializeApp","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSocialClick","a","providerGoogle","GoogleAuthProvider","providerGithub","GithubAuthProvider","providerFacebook","FacebookAuthProvider","signInWithPopup","onSubmit","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","Container","AuthSection","href","className","src","alt","type","placeholder","required","onClick","prev","styled","div","Auth","Footer","Nweet","nweetObj","isOwner","userObj","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","MyNickname","nickName","NweetUploadTrue","NweetContent","createdAt","width","height","Buttons","size","ProfileImage","profileImage","YourNickName","NweetUploadFalse","NweetFactory","nweet","setNweet","attachment","setAttachment","newModal","setNewModal","today","Date","getMonth","getDate","createdDate","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","orderingBy","now","creatorId","displayName","photoURL","addDoc","collection","IconContainer","ImageContainer","for","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","AttachedImage","ModalContainer","onEmojiClick","emojiObject","emoji","Factory","NweetInput","maxLength","SubmitButton","Home","nweets","setNweets","useEffect","queryData","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","HomeContainer","NweetContainer","ChatContainer","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","newProfile","setNewProfile","updateProfile","onProfileSubmit","signOut","push","Reference","Weather","Todo","Feeling","Navigation","clockState","setClockState","setInterval","date","hours","JSON","stringify","getHours","padStart","minutes","getMinutes","seconds","getSeconds","clock","HeaderLeft","to","HeaderCenter","HeaderRight","SideBarOptions","Icon","title","addTagOptions","fontSize","style","padding","SideBar","SideMenu","Header","UserInfo","UserInfoLeft","UserInfoRight","VscReferences","TiWeatherCloudy","RiTodoLine","FiThumbsUp","MdExpandMore","IoMdAdd","AppRouter","isLoggedIn","WholeApp","AppHead","AppBody","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","LoadingContainer","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2fb2207b.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import React, {useState} from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { \r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword, \r\n    } from \"@firebase/auth\";\r\nimport { \r\n        GoogleAuthProvider,\r\n        GithubAuthProvider,\r\n        FacebookAuthProvider, \r\n        signInWithPopup\r\n        } from \"@firebase/auth\";\r\nimport styled from \"styled-components\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { SiGithub } from \"react-icons/si\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\n\r\n\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const toggleAccount = () => {\r\n        setNewAccount(prev => !prev);\r\n    };\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSocialClick = async (event) => {\r\n        const {target: {name}} = event;\r\n        \r\n        const providerGoogle = new GoogleAuthProvider();\r\n        const providerGithub = new GithubAuthProvider();\r\n        const providerFacebook = new FacebookAuthProvider();\r\n\r\n        if (name === \"google\") {\r\n            signInWithPopup(authService, providerGoogle); \r\n        } else if (name === \"github\") {\r\n            signInWithPopup(authService, providerGithub); \r\n        } else if (name === \"facebook\") {\r\n            signInWithPopup(authService, providerFacebook); \r\n        };\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try { \r\n            let data;\r\n            if(newAccount) {\r\n                // Create Account \r\n                data = await createUserWithEmailAndPassword(\r\n                    authService, email, password\r\n                    );\r\n            } else {\r\n                // Log In\r\n                data = await signInWithEmailAndPassword(\r\n                    authService, email, password\r\n                    );\r\n            }\r\n            console.log(data);\r\n         } catch(error) {\r\n             setError(error.message);\r\n         } \r\n    };\r\n\r\n    return (\r\n        <Container>\r\n        <AuthSection>\r\n        <h3>Nweet Your Mind</h3>\r\n\r\n        <a href=\"https://nomadcoders.co/community/thread/1115\">\r\n        <img\r\n            className=\"logo\" \r\n            src=\"https://nomadcoders.co/m.svg\"\r\n            alt=\"nomadlogo\" />\r\n        </a>\r\n        \r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                className=\"infoInput\"\r\n                name=\"email\" \r\n                type=\"text\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email}\r\n                onChange={onChange}\r\n                />\r\n            <input\r\n                className=\"infoInput\"\r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required \r\n                value={password}\r\n                onChange={onChange}\r\n                />\r\n            <input\r\n                className=\"altSignInButton\" \r\n                type=\"submit\" \r\n                value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n            {error}\r\n        </form>\r\n       \r\n\r\n        <span onClick={toggleAccount}> \r\n            {newAccount ? \"Sign In\" : \"Create Account\"} \r\n        </span>\r\n\r\n        <br /> <br />\r\n\r\n        <span className=\"altMessage\">Have Other Accounts?</span>\r\n        \r\n        <div>\r\n            <button\r\n                className=\"altSignInButton\"\r\n                onClick={onSocialClick} \r\n                name=\"google\"> \r\n            Continue with &nbsp; <FcGoogle />\r\n            </button>\r\n            <button\r\n                className=\"altSignInButton\" \r\n                onClick={onSocialClick} \r\n                name=\"github\"> \r\n            Continue with &nbsp; <SiGithub />\r\n            </button>\r\n            <button\r\n                className=\"altSignInButton\" \r\n                onClick={onSocialClick} \r\n                name=\"facebook\"> \r\n            Continue with &nbsp; <FaFacebook />\r\n            </button>\r\n        </div>\r\n        </AuthSection>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AuthForm;\r\n\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background : linear-gradient(\r\n        to right, \r\n        rgba(20, 20, 20, 0.3) 30%, \r\n        rgba(20, 20, 20, 0.7) 50%,\r\n        rgba(20, 20, 20, 1)\r\n    ),\r\n    url(\"https://source.unsplash.com/random/1920x1080\");\r\n    background-size: cover;\r\n`;\r\nconst AuthSection = styled.div`\r\n    color: honeydew;\r\n    border: 3px solid honeydew;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    width: 370px;\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 20px 10px 50px 10px;\r\n    \r\n    .infoInput {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 auto;\r\n        margin-top: 8px;\r\n        margin-bottom: 8px;\r\n        background-color: transparent;\r\n        border: 2px solid honeydew;\r\n        border-radius: 4px;\r\n        color: honeydew;\r\n        text-align: center;\r\n        width: 70%;\r\n        height: 35px;\r\n    }\r\n    .infoInput::placeholder {\r\n        color: honeydew;\r\n        text-align: center;\r\n    }\r\n    .infoInput:focus::placeholder {\r\n        color: transparent;\r\n    }\r\n\r\n    .altSignInButton, .signInButton {\r\n        background-color: transparent;\r\n        color: honeydew;\r\n        border: 2px solid honeydew;\r\n        border-radius: 20px;\r\n        color: honeydew;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin: 0 auto;\r\n        width: 50%;\r\n        height: 30px;\r\n        cursor: pointer;\r\n        margin-top: 8px;\r\n        transition: 0.25s;\r\n    }\r\n    .altSignInButton:hover {\r\n        background-color: honeydew;\r\n        color: black;\r\n    }\r\n\r\n    .logo {\r\n        width: 55px;\r\n        height: 50px;\r\n    }\r\n\r\n`;","import React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Auth = () => {\r\n    return (\r\n    <div>\r\n        <AuthForm />\r\n        <Footer>\r\n            <footer> &copy; 유한회사 노마드컴퍼니 <br /> 2021년 3분기 天下第一 트위터 모방 경연대회  </footer>\r\n        </Footer>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Auth;\r\n\r\nconst Footer = styled.div`\r\n    font-family: 'ChosunGs';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@1.0/ChosunGs.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    color: white;\r\n    position: fixed;\r\n    padding: 10px 10px 0px 10px;\r\n    bottom: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 17px;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { RiDeleteBin7Fill } from \"react-icons/ri\";\r\n\r\n\r\nconst Nweet = ({ nweetObj, isOwner, userObj }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n\r\n\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure that you want to delete this nweet?\");\r\n        if(ok) {\r\n            await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n            await deleteObject( ref(storageService, nweetObj.attachmentUrl) );\r\n        } \r\n    }\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    }\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        const ref = doc(dbService, `nweets/${nweetObj.id}`);\r\n        await updateDoc(ref, {text: newNweet});\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const { target : {value} } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    return (  \r\n        <Container>\r\n            {\r\n                editing \r\n                ? \r\n                    (\r\n                    <>  \r\n                        {isOwner &&\r\n                        <>\r\n                        <form onSubmit={onSubmit} >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Edit Your Nweet\" \r\n                                value={newNweet} \r\n                                onChange={onChange}\r\n                                required \r\n                            />\r\n                            <input \r\n                            type=\"submit\" \r\n                            value=\"Update Nweet\" \r\n                            />\r\n                        </form>\r\n                        <button onClick={toggleEditing}> \r\n                            Cancel \r\n                        </button>\r\n                        </>  \r\n                        }\r\n                    </>\r\n                    )\r\n                :\r\n                    (isOwner \r\n                        ? \r\n                        (<>\r\n                        <MyNickname>\r\n                        <h5>{nweetObj.nickName}</h5>\r\n                        </MyNickname>\r\n                        <NweetUploadTrue>\r\n                            \r\n                        <NweetContent>\r\n                            <h5>{nweetObj.createdAt}</h5>\r\n                            <h4>{nweetObj.text}</h4>\r\n                        </NweetContent>\r\n\r\n                        {nweetObj.attachmentUrl && \r\n                        <img src={nweetObj.attachmentUrl}\r\n                            alt=\"nweetImage\"\r\n                            width=\"50ox\" \r\n                            height=\"50px\" />}\r\n \r\n                            <Buttons>\r\n                                <RiDeleteBin7Fill \r\n                                    size={18} \r\n                                    onClick={onDeleteClick} />\r\n                                <AiFillEdit \r\n                                    size={18} \r\n                                    onClick={toggleEditing} />\r\n                            </Buttons>\r\n                        <ProfileImage>\r\n                            <img src={nweetObj.profileImage === null\r\n                                      ? \"https://nomadcoders.co/m.svg\" \r\n                                      : nweetObj.profileImage\r\n                                    } \r\n                                 alt=\"profileImage\" \r\n                            />\r\n                        </ProfileImage>\r\n                        </NweetUploadTrue> \r\n                        </>)\r\n                    :\r\n                        (<>\r\n                        <YourNickName>\r\n                        <h5>{nweetObj.nickName}</h5>\r\n                        </YourNickName>\r\n                        <NweetUploadFalse>\r\n\r\n                        <ProfileImage>\r\n                        <img src={nweetObj.profileImage === null\r\n                                      ? \"https://nomadcoders.co/m.svg\" \r\n                                      : nweetObj.profileImage\r\n                                    } \r\n                             alt=\"profileImage\" \r\n                            />\r\n                        </ProfileImage>\r\n                        \r\n                        <NweetContent>\r\n                            <h5>{nweetObj.createdAt}</h5>\r\n                            <h4>{nweetObj.text}</h4>\r\n                        </NweetContent>\r\n\r\n                        {nweetObj.attachmentUrl && \r\n                        <img src={nweetObj.attachmentUrl}\r\n                            alt=\"nweetImage\"\r\n                            width=\"50ox\" \r\n                            height=\"50px\" />}\r\n                        </NweetUploadFalse>\r\n                        </>\r\n                        )\r\n                    )\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Nweet;\r\n\r\n\r\nconst Container = styled.div`\r\n    \r\n`;\r\n\r\nconst MyNickname = styled.div`\r\n    display: flex;\r\n    justify-content: right;\r\n    margin-right: 35px;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst YourNickName = styled.div`\r\n    display: flex;\r\n    justify-content: left;\r\n    margin-left: 35px;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst ProfileImage = styled.div`\r\n    >img {\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 999px;\r\n        background-color: white;\r\n    }\r\n`;\r\n\r\nconst NweetContent = styled.div`\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 15px;\r\n    \r\n`;\r\n\r\nconst NweetUploadTrue = styled.div`\r\n    display: flex;\r\n    width: 30%;\r\n    min-width: 430px;\r\n    margin-left: auto;\r\n    margin-right: 20px;\r\n    margin-bottom: 1vh;\r\n    border-radius: 20px;\r\n    background-color: honeydew;\r\n    align-items: center;\r\n    justify-content: right;\r\n    padding: 10px 10px 10px 10px;\r\n\r\n    >h4 {\r\n        margin-right: 15px;\r\n        max-width: 350px;\r\n\r\n    }\r\n    >h5 {\r\n\r\n    }\r\n`;\r\nconst NweetUploadFalse = styled.div`\r\n    display: flex;\r\n    width: 30%;\r\n    min-width: 430px;\r\n    align-items: center;\r\n    margin-left: 20px;\r\n    margin-bottom: 1vh;\r\n    border-radius: 20px;\r\n    background-color: honeydew;\r\n    padding: 10px 10px 10px 10px;\r\n\r\n    >h4 {\r\n        margin-left: 15px;\r\n        max-width: 350px;\r\n    }\r\n`;\r\n\r\n\r\nconst Buttons = styled.div`\r\n    cursor: pointer;\r\n    margin-right: 10px;\r\n    \r\n`;","import React, {useState} from \"react\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { HiOutlineEmojiHappy } from \"react-icons/hi\";\r\nimport Picker from 'emoji-picker-react';\r\n\r\n\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [newModal, setNewModal] = useState(false);\r\n    \r\n    const today = new Date();\r\n    const getMonth = today.getMonth();\r\n    const getDate = today.getDate();\r\n    const createdDate = `${getMonth + 1}월 ${getDate}일`;\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") {            \r\n        const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n        const response = await uploadString(attachmentRef, attachment, \"data_url\");\r\n        attachmentUrl = await getDownloadURL(response.ref)\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            orderingBy: Date.now(),\r\n            createdAt: createdDate,\r\n            creatorId: userObj.uid,\r\n            nickName: userObj.displayName,\r\n            profileImage: userObj.photoURL,\r\n            attachmentUrl\r\n        }\r\n\r\n        await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event, emojiObject) => {\r\n        const { target : {value} } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {target : {files} } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget : {result} } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n    const modalToggle = () => {\r\n        setNewModal((prev) => !prev);\r\n    };\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setNweet((prev) => prev + emojiObject.emoji);\r\n    };\r\n\r\n    return (\r\n        <>        \r\n        <IconContainer>\r\n            <ImageContainer>\r\n                <div className=\"attachImage\">\r\n                    <label for=\"image\"> <FaCamera size={20} /> </label>\r\n                    <input\r\n                        id=\"image\" \r\n                        type=\"file\" \r\n                        accept=\"image/*\" \r\n                        onChange={onFileChange}\r\n                        />\r\n                </div>\r\n            </ImageContainer>\r\n            <AttachedImage className={`${attachment ? \"\" : \"hidden\"}`}>\r\n               {attachment && ( \r\n                   <>\r\n                       <button onClick={onClearAttachment}>\r\n                           <CgClose size={20}/>\r\n                       </button>\r\n                       <img\r\n                           src={attachment} \r\n                           alt=\"attachedImage\" \r\n                           width=\"60px\" \r\n                           height=\"60px\" />\r\n                   </>\r\n               )}\r\n            </AttachedImage>\r\n\r\n            <ModalContainer>\r\n                <button \r\n                    className=\"EmojiButton\"\r\n                    onClick={modalToggle} \r\n                    >\r\n                    <HiOutlineEmojiHappy size={20} />\r\n                </button>\r\n                <div className={`modal ${newModal ? \"\" : \"hidden\"}`}>\r\n                        <Picker onEmojiClick={onEmojiClick} />\r\n                </div>\r\n            </ModalContainer>\r\n        </IconContainer>\r\n\r\n        <form onSubmit = {onSubmit}>\r\n        <Factory>\r\n            <NweetInput>\r\n                <input\r\n                    value= {nweet}\r\n                    onChange={onChange} \r\n                    type=\"text\" \r\n                    placeholder=\"Nweet Everyone!\" \r\n                    maxLength={60}\r\n                    >   \r\n                </input>\r\n            </NweetInput>\r\n            <SubmitButton>\r\n                <button\r\n                    type=\"submit\" \r\n                    value=\"nweet\"><MdSend size={25}/>\r\n                </button>\r\n            </SubmitButton>\r\n        </Factory>\r\n        </form>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;\r\n\r\nconst AttachedImage = styled.div`\r\n        position: fixed;\r\n        flex-direction: column;\r\n        width: 278px;\r\n        height: 318px;\r\n        left: 550px;\r\n        bottom: 10vh;\r\n        background-color: white;\r\n        border-radius: 5px;\r\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), \r\n                    0 6px 6px rgba(0, 0, 0, 0.23);\r\n\r\n    >img {\r\n        margin: auto;\r\n    }\r\n    >button {\r\n        display: flex;\r\n        justify-content: right;\r\n        padding-top: 2px;\r\n        padding-left: 2px;\r\n        margin-left: 5px;\r\n        margin-right: 5px;\r\n        color: gray;\r\n        background-color: white;\r\n        border: none;\r\n        border-bottom: 1px solid #49274b;\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n        :hover {\r\n            color: red;\r\n        }\r\n    }\r\n\r\n\r\n`;\r\nconst Factory = styled.div`\r\n    display: flex;\r\n    border: none;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n\r\n    color: #3f3f3f;\r\n`;\r\nconst NweetInput = styled.div`\r\n    display: flex;\r\n    width: 50vw;\r\n    padding: 15px;\r\n    border: 1px solid gray;\r\n    border-radius: 3px;\r\n    \r\n    >input{\r\n        border: none;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    >input:focus {outline: none;}\r\n\r\n`;\r\nconst SubmitButton = styled.div`\r\n    display: flex;\r\n\r\n    >button {\r\n        border: none;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n    }\r\n    >button:hover {\r\n        opacity: 0.5;\r\n    }\r\n`;\r\nconst IconContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .hidden {\r\n        display:none;\r\n    }\r\n`;\r\nconst ImageContainer = styled.div`\r\n\r\n    .attachImage input {\r\n        display: none;\r\n        }\r\n    .attachImage label {\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n        :hover { color: gray; }\r\n    }\r\n`;\r\nconst ModalContainer = styled.div`\r\n    display: flex;\r\n\r\n    .EmojiButton {\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n        background-color: transparent;\r\n        border: none;\r\n\r\n        :hover{ color: gray; }\r\n    }\r\n    \r\n    .modal{\r\n        position: fixed;\r\n        left: 260px;\r\n        bottom: 10vh;\r\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), \r\n                    0 6px 6px rgba(0, 0, 0, 0.23);\r\n    }\r\n\r\n\r\n    .hidden {\r\n        display: none;\r\n    }\r\n`;","import { dbService } from \"fbase\";\r\nimport { collection, \r\n         query,\r\n         orderBy, \r\n         onSnapshot } from \"firebase/firestore\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        const queryData = query(collection(dbService, \"nweets\"), orderBy(\"orderingBy\", \"asc\"));\r\n        onSnapshot(queryData, snapshot => {\r\n            const nweetArr = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setNweets(nweetArr);\r\n        });\r\n        },[])\r\n    \r\n    return (\r\n    <HomeContainer>\r\n        <NweetContainer>\r\n            <div className=\"nweetBox\">\r\n                {nweets.map(nweet => (\r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                        userObj={userObj}/>\r\n                ))}\r\n            </div>\r\n        </NweetContainer>\r\n\r\n        <ChatContainer>\r\n            <NweetFactory userObj={userObj} />\r\n        </ChatContainer>\r\n    </HomeContainer>    \r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst HomeContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst NweetContainer = styled.div`\r\n    display: flex;\r\n    height: 85vh;\r\n    /* display: none;   */\r\n    \r\n    .nweetBox {\r\n        position: flex;\r\n        width: 100%;\r\n        overflow: scroll;\r\n        overflow-x: hidden;\r\n        }\r\n    .nweetBox::-webkit-scrollbar {\r\n        width: 10px;\r\n        }\r\n    .nweetBox::-webkit-scrollbar-track {\r\n        background: transparent; \r\n        }\r\n    .nweetBox::-webkit-scrollbar-thumb {\r\n        background: gray; \r\n        }\r\n    .nweetBox::-webkit-scrollbar-thumb:hover {\r\n        background: #555; \r\n        }\r\n`;\r\n\r\nconst ChatContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: linear-gradient(transparent, white);\r\n\r\n`;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport { storageService } from \"fbase\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [newProfile, setNewProfile] = useState(userObj.photoURL);\r\n    \r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    const onChange = (event) => {\r\n        const { target : { value }} = event;\r\n        setNewDisplayName(value);\r\n\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await updateProfile(\r\n                userObj, {\r\n                displayName: newDisplayName}\r\n                );\r\n                refreshUser();\r\n        }\r\n    }\r\n    \r\n    const onProfileChange = (event) => {\r\n        const { target : {files} } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setNewProfile(result);    \r\n        }\r\n        reader.readAsDataURL(theFile);       \r\n    }\r\n\r\n    const onProfileSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(newProfile);\r\n\r\n        const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n        const response = await uploadString(attachmentRef, newProfile, \"data_url\");\r\n        let attachmentUrl = await getDownloadURL(response.ref);\r\n\r\n        if(userObj.photoURL !== attachmentUrl) {            \r\n            await updateProfile(\r\n                userObj, {\r\n                    photoURL: attachmentUrl\r\n                }\r\n            );\r\n            refreshUser();           \r\n        }\r\n    }\r\n\r\n    return (\r\n    <Container>\r\n        <h1> Hello {userObj.displayName} </h1>\r\n        {newProfile === null \r\n                        ? \r\n                        <img \r\n                            src=\"https://nomadcoders.co/m.svg\" \r\n                            width=\"70px\"\r\n                            height=\"70px\"\r\n                            alt=\"altImage\"/>\r\n                        :\r\n                        <img \r\n                            src={newProfile} \r\n                            width=\"70px\"\r\n                            height=\"70px\"\r\n                            alt=\"profileImage\"/>}\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Display Name\"\r\n                value={newDisplayName}\r\n            />\r\n            <input type=\"submit\" value=\"Update Name\" />\r\n        </form>\r\n        \r\n        <form onSubmit={onProfileSubmit}>\r\n            <input \r\n                onChange={onProfileChange} \r\n                type=\"file\" \r\n                accept=\"image/*\" />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n            {newProfile === null \r\n                        ? \r\n                        <img \r\n                            src=\"https://nomadcoders.co/m.svg\" \r\n                            width=\"50px\"\r\n                            height=\"50px\"\r\n                            alt=\"altImage\"/>\r\n                        :\r\n                        <img \r\n                            src={newProfile} \r\n                            width=\"50px\"\r\n                            height=\"50px\"\r\n                            alt=\"profileImage\"/> \r\n            }\r\n        </form>\r\n\r\n        <button onClick={onLogOutClick}> Sign Out </button>\r\n    </Container>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Profile;\r\n\r\nconst Container = styled.div`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    text-align:center;\r\n    height: 95%;\r\n\r\n    >img {\r\n        border-radius: 999px;\r\n    }\r\n`;","import React from 'react'\r\n\r\nfunction Reference() {\r\n    return (\r\n        <div>\r\n            Thank you!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reference;","import React, {useState} from 'react'\r\nimport styled from \"styled-components\";\r\nimport Picker from 'emoji-picker-react';\r\n\r\n\r\nfunction Weather() {\r\n  // const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [newModal, setNewModal] = useState(false);\r\n\r\n  const modalToggle = () => {\r\n    setNewModal((prev) => !prev);\r\n  };\r\n\r\n    return (\r\n        <Container>\r\n            <button onClick={modalToggle}>Open Modal</button>\r\n            <div className={`modal ${newModal ? \"\" : \"hidden\"}`}>\r\n              <div className=\"modal_overlay\"></div>\r\n              \r\n              <div className=\"modal_content\">\r\n                <Picker />\r\n              </div>\r\n\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n\r\n\r\nconst Container = styled.div`\r\n\r\n  .modal {\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  position: fixed;\r\n  top: 33px;\r\n  left: 50%;\r\n  width: 300px;\r\n  background-color: transparent;\r\n  }\r\n\r\n  .modal_overlay {\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .modal_content {\r\n    >button {\r\n      margin:0;\r\n    }\r\n  }\r\n\r\n  .hidden {\r\n    display: none;\r\n  }\r\n`;","import React from 'react'\r\n\r\nfunction Todo() {\r\n    return (\r\n        <div>\r\n            Todo!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\n\r\nfunction Feeling() {\r\n    return (\r\n        <div>\r\n            Feeling!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feeling\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { VscHome } from \"react-icons/vsc\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\n\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  const [clockState, setClockState] = useState();\r\n\r\n  useEffect(() => {\r\n      setInterval(() => {\r\n          const date = new Date();\r\n          const hours = (JSON.stringify(date.getHours())).padStart(2, '0');\r\n          const minutes = (JSON.stringify(date.getMinutes())).padStart(2, '0');\r\n          const seconds = (JSON.stringify(date.getSeconds())).padStart(2, '0'); \r\n          const clock = `${hours}:${minutes}:${seconds}`;\r\n          \r\n          setClockState(clock);\r\n          \r\n      }, 1000);\r\n  }, []);\r\n\r\n    return (\r\n    <Container>\r\n      <HeaderLeft>\r\n          <Link className=\"link profile\" to=\"/profile\">\r\n            <CgProfile size={28} /> \r\n          </Link>\r\n          <Link className=\"link home\" to=\"/\">\r\n            <VscHome size={29} alt=\"Home\"/> \r\n          </Link>\r\n      </HeaderLeft>\r\n\r\n      <HeaderCenter>\r\n        <h5>{clockState}</h5>\r\n      </HeaderCenter>\r\n        \r\n      <HeaderRight>\r\n        <a href=\"https://www.nomadcoders.co\">\r\n          <img src=\"https://nomadcoders.co/m.svg\" \r\n               alt=\"ncImage\" \r\n               width=\"25px\"\r\n               height=\"20px\"\r\n               />\r\n        </a>\r\n      </HeaderRight>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Navigation;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: #3f0f40;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  flex: 0.3;\r\n  margin-left: 15px;\r\n  align-items: center;\r\n  \r\n  .link {\r\n    color:honeydew;\r\n  }\r\n  .link:hover {\r\n    opacity: 0.8;\r\n  }\r\n  \r\n  .home {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst HeaderCenter = styled.div`\r\n  @font-face {\r\n    font-family: 'LAB디지털';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-07@1.0/LAB디지털.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n\r\n  color: honeydew;\r\n  display: flex;\r\n  flex: 0.4;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  font-size: 1.7rem;\r\n  font-family: 'LAB디지털';\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  display: flex;\r\n  flex: 0.3;\r\n  right: 0;\r\n  justify-content: right;\r\n  align-items: center;\r\n  margin-right: 20px;\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\n\r\nfunction SideBarOptions({ Icon, title, addTagOptions }) {\r\n    return (\r\n        <Container>\r\n             {Icon && <Icon fontSize=\"25\" style={ {padding : 10} }/> }\r\n             {Icon ?\r\n                    <h3>{title}</h3>\r\n                   :\r\n                    <h3>Not Founded</h3>        \r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SideBarOptions;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n    align-items: center;\r\n    padding-left: 10px;\r\n    cursor: pointer;\r\n    transition: 0.2s;\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n        background-color: #340e36;\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport SideBarOptions from \"components/SideBarOptions\";\r\nimport {VscReferences} from \"react-icons/vsc\";\r\nimport {TiWeatherCloudy} from \"react-icons/ti\";\r\nimport {RiTodoLine} from \"react-icons/ri\";\r\nimport {FiThumbsUp} from \"react-icons/fi\";\r\nimport {MdExpandMore} from \"react-icons/md\";\r\nimport {IoMdAdd} from \"react-icons/io\";\r\n\r\n\r\nfunction SideBar({ userObj }) {\r\n\r\n    return (\r\n        <Container>\r\n        <SideMenu>\r\n            <Header>\r\n                <UserInfo>\r\n                    <UserInfoLeft>\r\n                    <img src={userObj.photoURL === null\r\n                                ? \"https://nomadcoders.co/m.svg\" \r\n                                : userObj.photoURL\r\n                            } \r\n                         alt=\"profileImage\" />\r\n                    </UserInfoLeft>\r\n                    <UserInfoRight>\r\n                    <h4>Nweet Your Day</h4>\r\n                    <h3>{userObj.displayName}</h3>\r\n                    </UserInfoRight>\r\n                </UserInfo>\r\n            </Header>\r\n\r\n            <Link className=\"link profile\" to=\"/reference\">\r\n                <SideBarOptions \r\n                    Icon={VscReferences} \r\n                    title=\"Thank You List\"/>\r\n            </Link>\r\n\r\n            <Link className=\"link profile\" to=\"/weather\">\r\n            <SideBarOptions \r\n                Icon={TiWeatherCloudy} \r\n                title=\"Weather\" />\r\n            </Link>\r\n\r\n            <Link className=\"link profile\" to=\"/todo\">\r\n            <SideBarOptions \r\n                Icon={RiTodoLine} \r\n                title=\"To-do\" />\r\n            </Link>\r\n\r\n            <Link className=\"link profile\" to=\"/feeling\">\r\n            <SideBarOptions \r\n                Icon={FiThumbsUp} \r\n                title=\"Feeling Good Today\" />\r\n            </Link>\r\n            \r\n            <hr />\r\n\r\n            <SideBarOptions Icon={MdExpandMore} title=\"My Tags\" />\r\n\r\n            <hr />\r\n\r\n            <SideBarOptions Icon={IoMdAdd} addTagOptions title=\"Add Tag\" />\r\n\r\n        </SideMenu>\r\n\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default SideBar;\r\n\r\nconst Container = styled.div`\r\n    @font-face {\r\n    font-family: 'IBMPlexSansKR-Regular';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-07@1.0/IBMPlexSansKR-Regular.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    }\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 0.3;\r\n    max-width: 260px;\r\n    min-width: 260px;\r\n    color: honeydew;\r\n    font-family: 'IBMPlexSansKR-Regular';\r\n    background-color: #3f0f40;\r\n    border-top: 1px solid #49274b;\r\n`;\r\n\r\nconst SideMenu = styled.div`\r\n    >hr {\r\n        margin-top: 7px;\r\n        margin-bottom: 7px;\r\n        border: 1px solid #49274b;\r\n    }\r\n  \r\n    .link {\r\n        color:honeydew;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    border-bottom: 1px solid #49274b;\r\n    padding: 13px;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n`;\r\nconst UserInfoLeft = styled.div`\r\n    display: flex;\r\n    margin-left: 10px;\r\n\r\n    >img {\r\n        width: 55px;\r\n        height: 55px;\r\n        border-radius: 999px;\r\n        border: none;\r\n        background-color: white;\r\n    }\r\n`;\r\nconst UserInfoRight = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 15px;\r\n    padding-top: 3px;\r\n`;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Reference from \"../routes/Reference\";\r\nimport Weather from \"../routes/Weather\";\r\nimport Todo from \"../routes/Todo\";\r\nimport Feeling from \"../routes/Feeling\";\r\nimport Navigation from \"./Navigation\";\r\nimport SideBar from \"./SideBar\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AppRouter = ( {refreshUser ,isLoggedIn, userObj} ) => {\r\n    return (\r\n        <Router>\r\n            <WholeApp>\r\n            <AppHead>\r\n                {isLoggedIn && <Navigation userObj={userObj} />}\r\n            </AppHead>\r\n\r\n            <AppBody>\r\n                {isLoggedIn && <SideBar userObj={userObj} />}\r\n                <Switch>\r\n                    {isLoggedIn \r\n                        ? \r\n                            <>\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj} />\r\n                            </Route>\r\n                            \r\n                            <Route exact path=\"/profile\">\r\n                                <Profile \r\n                                    userObj={userObj} \r\n                                    refreshUser={refreshUser} \r\n                                />\r\n                            </Route>\r\n                            <Route exact path=\"/reference\">\r\n                                <Reference \r\n                                    userObj={userObj} \r\n                                />\r\n                            </Route>\r\n                            <Route exact path=\"/weather\">\r\n                                <Weather \r\n                                    userObj={userObj} \r\n                                />\r\n                            </Route>\r\n                            <Route exact path=\"/todo\">\r\n                                <Todo \r\n                                    userObj={userObj} \r\n                                />\r\n                            </Route>\r\n                            <Route exact path=\"/feeling\">\r\n                                <Feeling \r\n                                    userObj={userObj} \r\n                                />\r\n                            </Route>\r\n                            </> \r\n                        : \r\n                            <>\r\n                            <Route exact path=\"/\"> \r\n                                <Auth /> \r\n                            </Route>\r\n                            </>\r\n                    }\r\n                </Switch>\r\n            </AppBody>\r\n            </WholeApp>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter; \r\n\r\nconst WholeApp = styled.div`\r\n    display: flex;\r\n    position: fixed;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n`;\r\nconst AppHead = styled.div`\r\n    display: flex;\r\n    width: 100vw;  \r\n\r\n`;\r\nconst AppBody = styled.div`\r\n    display: flex;\r\n    width: 100vw;\r\n    height: inherit;\r\n`;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport styled from \"styled-components\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true)\n    });  \n  })\n  const refreshUser = () => {\n    setUserObj({...authService.currentUser});\n  };\n    return (\n    <div>\n      {init ? <AppRouter\n                refreshUser={refreshUser} \n                isLoggedIn={Boolean(userObj)} \n                userObj={userObj} \n                /> \n            : <LoadingContainer>\n              <img src=\"https://i.stack.imgur.com/MEBIB.gif\"\n                   alt=\"Loading...\"\n                   />\n              </LoadingContainer>\n              }\n    </div>\n    );\n  }\n\nexport default App;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport App from './components/App';\nimport \"./style/index.css\";\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// React.StrictMode"],"sourceRoot":""}